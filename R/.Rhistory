require(stargazer)
require(lmtest)
require(sandwich)
require(xtable)
rm(list=ls())
setwd("~/Desktop/NHH/FIE401B/Innlevering2")
data <- read.csv("25_portfolios_Size_BM.csv", header=TRUE, sep=",")
summary(data)
#Exercise1
multi.fun <- function(x) {
c(mean = mean(x), sd = sd(x), min = min(x), max = max(x), quantile = quantile(x, .05), quantile = quantile(x, .95))
}
table <- sapply(data[,2:26], multi.fun)
stargazer(table, type="text")
summary1 <- as.data.frame(sapply(data[,2:26], multi.fun))
summary1 <- t(summary1)
stargazer(summary1, type="text", out="tabell1.html")
#Exercise 2
RESULT <- as.data.frame(matrix(NA, 25, 4))
colnames(RESULT) <- c("a", "ta", "b", "tb")
j <-  0
m <-  1
for(i in 2:26){
#use j,m to get right column names, ME1.BM1...ME5.BM5
if(j<6){
j <- j+1
}
if(j == 6){
m <- m+1
j <- 1
}
datai <- data[, c(i,27,28)]
datai$ExRet <- datai[,paste("ME",m,".","BM",j,sep="")] - datai[,3]
fit <- lm(ExRet~MktRF, data=datai)
if(bgtest(fit)$p.value <= 0.05){#test for autocorrelation
out<-coeftest(fit,vcov=vcovHAC(fit))
} else{
if(bptest(fit)$p.value <= 0.05){#test for heteroskedasticity
out <- coeftest(fit, vcov = vcovHC(fit));
}else{
out <- coeftest(fit);
}
}
RESULT[(i-1),"a"]<- out["(Intercept)",1]
RESULT[(i-1),"ta"] <- out["(Intercept)",3]
RESULT[(i-1),"b"]<-out["MktRF",1];
RESULT[(i-1),"tb"]<-out["MktRF",3];
rm(fit,datai,out);
}
summary(fit)
max(RESULT$b)
max(RESULT$b)
row.names(RESULT) <-rownames(summary1)
max(RESULT$b)
signres <- subset(RESULT, abs(ta)>1.96)
print(xtable(signres), type="html", file="table3.html")
print(xtable(RESULT), type="html", file="table2.html")
RESULT2 <- as.data.frame(matrix(NA, 456,1))
colnames(RESULT2) <- "lambda"
Datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
for(i in 1:456) {
datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
colnames(datai) <- c("ret", "beta")
fit <- lm(ret~beta, data=datai)
out <- coeftest(fit)
RESULT2[i, "lambda"] <- out["beta", 1]
rm(datai)
}
datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
for(i in 1:456) {
datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
colnames(datai) <- c("ret", "beta")
fit <- lm(ret~beta, data=datai)
out <- coeftest(fit)
RESULT2[i, "lambda"] <- out["beta", 1]
rm(datai)
}
mean(RESULT2$lambda)
x <- RESULT2$lambda
t.test(x)
mean(RESULT2$lambda)
x <- RESULT2$lambda
t.test(x)
RESULT2month <- RESULT2
RESULT2month$month <- 1:456
plot(RESULT2month$month, RESULT2month$lambda)
RESULT2 <- as.data.frame(matrix(NA, 456,1))
colnames(RESULT2) <- "lambda"
Datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
colnames(datai) <- c("ret", "beta")
fit <- lm(ret~beta, data=datai)
out <- coeftest(fit)
RESULT2[i, "lambda"] <- out["beta", 1]
rm(datai)
for(i in 1:456) {
datai <- as.data.frame(cbind(t(data[i,c(2:26)]), RESULT$b))
colnames(datai) <- c("ret", "beta")
fit <- lm(ret~beta, data=datai)
out <- coeftest(fit)
RESULT2[i, "lambda"] <- out["beta", 1]
rm(datai)
}
mean(RESULT2$lambda)
View(data)
setwd("~/Desktop/NHH/BAN401/R")
1+2
#lecture 1
print(exp)
print(exp(2))
print(exp(1))
print(exp(3))
exp(1)
log(2)
log(10)
log(x=10, base = exp(1))
log(x=10, base = exp(10))
log(x = 10, base = exp(1))
log(x=10, base = 10)
log(x=100, base = 10)
apropos(mean)
apropos(mean)
apropos(mean)
apropos("mean")
?colMeans
?polbr
?polr
install.packages("MASS")
require(polr)
require(MASS)
?polr
#lecture2
answer <- 3
print(answer)
answer
is(answer)
answer1 <- 43
rm(answer1)
vector1 <- c(1,2,3,4,5,6,7,8,9,10)
vector3 <- c(vector1,vector2)
vector2 <- c(1,2,3,4,5,6,7,8,9,10)
vector3 <- c(vector1,vector2)
vector3
log(vector1)
round(log(vector1))
round(log(vector1),digit = 1)
round(log(vector1),digit = 1)
median(vector1)
prod(vector1)
sd(vector1)
length(vector1)
vector4 <- seq(0,10)
vector5 <- seq(0,10,length.out = 40)
vector5
rep(0,time=25)
vector4[3:5]
x <- c(1,2,3,4,NA,6,7,8,9,NA)
na.omit(x)
print(x)
na.omit(x)
summary(x)
na.omit(x) #in console to remove NA
summary(x)
y <- na.omit(x) #in console to remove NA
summary(x) #gives us amount of NA
y
#remove na
x.noNA <- subset(x, is.na(x) == FALSE)
x
x.noNA
sample(vector, size=5, replace = FALSE)
vector <- 1:500
sample(vector, size=5, replace = FALSE)
res <- paste(x, "*", y, "is equal to",m )
x <- 5
y <- 2
m <- 10
res <- paste(x, "*", y, "is equal to",m )
res
a <- list("false" = FALSE,"true" = TRUE )
append(a,"three" = 3,after = 2)
a <- list("false" = FALSE,"true" = TRUE )
append(a,("three" = 3),after = 2)
a[-2]
#interactive input
input <- readline(prompt = "Enter you age")
age <- as.integer(input)
#lecture3
matrix1 <- matrix(data = 1, nrow = 3, ncol = 3)
matrix2 <- matrix(data = NA, nrow = 3, ncol = 7)
print(matrix2)
dim(matrix2)
vector9 <- 1:12
matrix3 <- matrix(data = vector9, nrow = 4)
print(matrix3)
vector10 <- 1:10
vector11 <- vector10^2
matrix4 <- rbind(vector10,vector11)
matrix4
matrix6 <- cbind(vector10,vector11,vector10)
matrix6
matrix7 <- diag(5)
matrix7
matrix7[1,1]
eigen(matrix7)
eigen(matrix4)
eigen(matrix1)
data <- data("iris")
data <- data("IRIS")
data <- data("iris")
print(data)
data("iris")
